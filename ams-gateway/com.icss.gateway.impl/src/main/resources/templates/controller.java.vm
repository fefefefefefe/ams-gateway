package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
##import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#set($entityNameReq=${entity})
#set($entityRest=$entityNameReq.substring(0,1).toLowerCase()+$entityNameReq.substring(1,$entityNameReq.length()))

@Api("${table.comment} 服务")
@RequestMapping("/${entityRest}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
##@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    #set($entityName=${entity})
    #set($entityName=$entityName.substring(0,1).toLowerCase()+$entityName.substring(1,$entityName.length()))
    #set($apiName=$entityName+"Service")
    #set($resourceNames=$entityName+"s")
    #set($insertMethod=$apiName+".save("+$entityName+")")
    #set($deleteMethod=$apiName+".removeById(uuid)")
    #set($updateCode=$entityName +".setUuid(uuid);")
    #set($updateMethod=$apiName+".updateById("+$entityName+")")
    #set($getOneMethod=$apiName+".getById(uuid)")
    #set($getPageMethod=$apiName+".page(new Page<>(pageNo,pageSize), queryWrapper);")

    @Autowired
    private ${table.serviceName} $apiName;

    @ApiOperation("创建单个${entity}")
    @PostMapping("/add")
    public Result<Boolean> insert(@RequestBody ${entity} $entityName) {
        return Result.OK($insertMethod);
    }


    @ApiOperation("删除单个${entity}")
    @PostMapping("/delete/{uuid}")
    public Result<Boolean> deleteById(@PathVariable("uuid") String uuid) {
        return Result.OK($deleteMethod);
    }

    @ApiOperation("编辑单个${entity}")
    @PostMapping("/updateByUuId")
    public Result<Boolean> updateByUuId( @RequestBody ${entity} $entityName) {
        return Result.OK($updateMethod);
    }

    @ApiOperation("查询单个${entity}")
    @GetMapping("/selectByUuid/{uuid}")
    public Result<${entity}> selectByUuid(@PathVariable("uuid") String uuid) {
        return Result.OK($getOneMethod);
    }

    @ApiOperation("查询分页${entity}")
    @GetMapping("/selectPage")
    public Result<IPage<${entity}>> selectPage(@RequestParam(value = "pageNo", defaultValue = "1") int pageNo,
                                                    @RequestParam(value = "pageSize", defaultValue = "10") int pageSize,
                                                    ${entity} $entityName) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper();
        IPage<${entity}> page = $getPageMethod
        return Result.OK(page);
    }
}
#end